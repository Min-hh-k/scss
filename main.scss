//@import url("./sub.scss")
@import "./sub.scss" , "./sub2scss"; // 다른 scss 파일 가져오기, url() 없어도 가져올 수 있음

// 변수 지정
/*주석*/
//주석
$color: royalblue;

.container1 {
  h1 {
    color: $color;
    background-color: orange;
    font-size: 60px;
  }
}

.container2 {
  ul {
    li {
      font-size: 40px;
      .name {
        color: tomato;
      }
    
      .age {
        color: green;
      }
    }
  }
}

// & 상위 선택자 참조
.btn {
  position: absolute;
  &.active {
    color: red;
  }
}

.list {
  li {
    &:last-child {
      margin-right: 0;
    }
  }
}

.fs {
  &-small {font-size: 12px;}
  &-medium {font-size: 14px;}
  &-large {font-size: 16px;}
}

// 중첩된 속성
.box {
  font: { // font 네임스페이스: 이름을 통해 구분 가능한 범위를 만들어내는 것, 일종의 유효범위 지정 방법
    weight: bold;
    size: 10px;
    family: sans-serif;
  };
  margin: {
    top: 10px;
    bottom: 15px;
  };
  padding: {
    top: 10px;
    bottom: 5px;
    left: 10px;
    right: 10px;
  };
}

// 변수
$size: 200px; // 중괄호 안에서 선언하면 안에서만 사용가능

.container {
  position: fixed;
  top: $size; // 200px
  .item {
    $size: 100px;
    width: $size; // 100px
    height: $size; // 100px
    transform: translateX($size);
  }
  left: $size; // 100px, 변수를 재할당 한 뒤, 밑 부분은 재할당 한 값이 적용됨.
}

// 산술연산자

.div {
  $size: 10px;
  width: 20px + 20px;
  height: 40px - 10px;
  font-size: 10px * 2;
  margin: (30px / 2); // == $size / 2   // 나누기 연산자는 ( ) 안에 작성
  padding: 20px % 7; // ==6px
}

.box {
  width: calc(100% - 100px);
}

// 재활용 mixin
@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  @include center; // 지정해둔 것 호출
  .item {
    @include center;
  }
}

.box {
  @include center;
}


// 매개변수 처럼 지정하여 , 사용 값에 인수지정하여 사용
@mixin box($size) { 
  width: $size;
  height: $size;
  background-color: tomato;
}

.container {
  @include box(200px); 
  .item {
    @include box(100px);
  }
}

.box {
  @include box(200px);
}

//
@mixin box($size : 100px) { // $size 에 100px 기본값 지정 
  width: $size;
  height: $size;
  background-color: tomato;
}

.container {
  @include box(200px); 
  .item {
    @include box; // 100px 값 출력 
  }
}

.box {
  @include box; // 100px 값 출력
}

//
@mixin box($size : 100px, $color : blue) { // $size 에 100px 기본값 지정 
  width: $size;
  height: $size;
  background-color: $color;
}

.container {
  @include box(200px, red);  //width height == 200px, backgroundColor = red 출력
  .item {
    @include box($color : green); // 100px 값 과 배경색 그린 출력, <키워드인수>
  }
}

.box {
  @include box; // 100px 값 출력
}

// 반복문

@for $i from 1 through 10 {
  .box {
    width: 100px;
  }
}

@for $i from 1 through 10 {
  .box:nth-child(#{$i}) { //.box:nth-child(1) ... .box:nth-child(10) , 순서 지정시 #{} 사용
    width: 100px;
  }
}

// 함수
@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@function ratio($size, $ratio) {
  @return $size * $ratio
}

.box {
  $width: 160px;
  width: $width;
  height: ratio($width, 9/16);
  @include center;
}

// 색상 내장함수

.box {
  $color: blue;
  width: 200px;
  height: 200px;
  margin: 20px;
  border-radius: 10px;
  background-color: $color;
  &:hover {
    background-color: darken($color, 30%);
  }
  &.built-in {
    background-color: mix($color, red);
    // mix(첫번째 색, 두번째 색) ,, 섞기
    // lighten(색상, 10%) ,,선택한 색상이 10% 밝아짐
    // darken(색상, 20%) ,, 선택한 색상이 20% 어두워짐
    // saturate($color, 40%) ,, 색상의 채도가 40% 올라감
    // desaturate($color, 40%) ,, 색상의 채도가 40% 내려감
    // grayscale(색상) ,, 주어진 색을 회색으로 만듬
    // invert(색상) ,, 주어진 색상을 반전 시킴
    // rgba(색상, 0.2) ,, 색상의 투명도 0.2 출력
  }
}

//@each
$map: (
  o: orange,
  r: royalblue,
  y: yellow,
);

@each $k, $v in $map {
  .box-#{$k} {
    color: $v;
  }
}

// @content ,, @mixin 에다가 추가할 때

@mixin left-top {
  position: absolute;
  left: 0;
  top: 0;
  @content
}

.container {
  width: 100px;
  height: 100px;
  @include left-top {
    bottom: 0;
    right: 0;
    margin: auto;
  }
}